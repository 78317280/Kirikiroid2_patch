<html>
  <head>
    <meta charset="utf-8"/>
    <meta http-equiv="X-UA-Compatible" content="IE=edge,chrome=1"/>
  
    <title>Patch List</title>
    <!-- Latest compiled and minified CSS -->
    <link rel="stylesheet" href="https://netdna.bootstrapcdn.com/bootstrap/3.1.1/css/bootstrap.min.css">

    <!-- Optional theme -->
    <link rel="stylesheet" href="https://netdna.bootstrapcdn.com/bootstrap/3.1.1/css/bootstrap-theme.min.css">
  
    <script type="text/javascript" src="https://stuk.github.io/jszip/dist/jszip.min.js"></script>
	<script type="text/javascript" src="https://stuk.github.io/jszip-utils/dist/jszip-utils.min.js"></script>
	
    <script type="text/javascript" src="https://stuk.github.io/jszip/vendor/FileSaver.js"></script>
    <!--script type="text/javascript" src="../js/downloader.js"></script-->
<style>
form{margin-bottom: 0em;}
th{padding: 0.3em; text-align: center;}
td{padding: 0.3em;}
td.datetime{text-align: center;}
.floatPanel {
	position: fixed;
	background: #f0f0fd;
	margin: 4em;
    -moz-border-radius: 1em;
    -webkit-border-radius: 1em;
    border-radius: 1em;
    -moz-box-shadow: 0 0 1em rgba(0, 0, 0, 0.9);
    -webkit-box-shadow: 0 0 1em rgba(0, 0, 0, 0.9);
    -box-shadow: 0 0 1em rgba(0, 0, 0, 0.9);
}
table tr:nth-child(even){ 
	background: #F8F8F8; 
}
tr:hover{
	background: #FFFFBB !important; 
}
@media(min-width: 1700px){
	#floatPanel{
		position: fixed; 
		top: 20%; 
		left: 27%;  
		display: none;
	}
}
@media (min-width: 1200px) and (max-width: 1699px) {
	#floatPanel{
		position: fixed; 
		top: 20%; 
		left: 20%;  
		display: none;
	}
} 
@media (min-width: 992px) and (max-width: 1199px) {
	#floatPanel{
		position: fixed; 
		top: 20%; 
		left: 17%;  
		display: none;
	}
	.floatPanel{
		width: 600px;
	}
} 
@media (min-width: 768px) and (max-width: 991px) {
	#floatPanel{
		position: fixed; 
		top: 15%; 
		left: 16.5%;  
		display: none;
	}
	.floatPanel{
		width: 600px;
	}
} 
@media (min-width: 480px) and (max-width: 767px) {
	#floatPanel{
		position: fixed; 
		top: 20%; 
		left: 5%;  
		display: none;
	}
} 
@media (max-width: 479px) {
	#floatPanel{
		position: fixed; 
		top: 20%; 
		left: 5%;  
		display: none;
	}
}
</style> 
  </head>
  
  <body>
    <div class="container">
		<div class="row">
			<table class="table table-bordered col-sm-10" id="table_all" border="3">
				<tr>
					<td colspan="4">
					<div class="input-group col-sm-12">
					<div class="input-group-addon">Filter:</div>
					<input class="form-control" type="text" oninput="onFilterInput(this.value)"/>
					<span class="input-group-addon" id="title_count">Titles</span>
					</div>
					</td>
				</tr>
				<tr style="background: #ffffff;">
					<th>&nbsp;</th>
					<th style="width:25%">Update Time&nbsp;<button onclick="sortTableByTime(true)">▲</button><button onclick="sortTableByTime(false)">▼</button></th>
					<th style="width:25%">Brand</th>
					<th>Title&nbsp;<button onclick="sortTableByName(true)">▲</button><button onclick="sortTableByName(false)">▼</button></th>
				</tr>
			</table>
		</div>
	</div>
<script type="text/javascript">
function ClosePanel() {
	var floatPanel = document.getElementById("floatPanel");
	floatPanel.style.display = "none";
}
</script>
<div id="floatPanel">
	<div class="floatPanel">
		<div style="padding: 1em; position:relative">
			<button class="btn btn-primary close" onclick="ClosePanel()" style="position:absolute;top:10;right:15">X</button>
			<h2 id="floatPanelTitle" align="center">TITLE</h2><br>
			<table id="floatPanelTable" border="2" align="center"></table><br>
			<div style="text-align: center;">
			<button class="btn btn-primary" onclick="ClosePanel()">BACK</button>
			</div>
		</div>
	</div>
</div>
<script type="text/javascript" src="alldata.js"></script>
<script type="text/javascript">
var filter_data;
function DoGet(name, filelst, sender) {

    var Promise = window.Promise;
    if (!Promise) {
        Promise = JSZip.external.Promise;
    }
	
    /**
     * Fetch the content and return the associated promise.
     * @param {String} url the url of the content to fetch.
     * @return {Promise} the promise containing the data.
     */
    function urlToPromise(url) {
        return new Promise(function(resolve, reject) {
            JSZipUtils.getBinaryContent(url, function (err, data) {
                if(err) {
                    reject(err);
                } else {
                    resolve(data);
                }
            });
        });
    }
	
	var zip = new JSZip();
	for(var i = 0; i < filelst.length; ++i) {
		var filename = filelst[i];
		var url = filename;
		filename = filename.replace(/.*\//g, "");
		zip.file(filename, urlToPromise(url), {binary:true});
	}

	sender.disabled = true;
	// when everything has been downloaded, we can trigger the dl
	if (JSZip.support.blob) {
		zip.generateAsync({type:"blob", mimeType: "application/octet-stream"}, function(metadata){
			var text = metadata.percent.toFixed(2) + "%";
			sender.removeChild(sender.firstChild);
			sender.appendChild(document.createTextNode(text));
		}).then(function (blob) {
			// see FileSaver.js
			sender.removeChild(sender.firstChild);
			sender.appendChild(document.createTextNode("SAVE"));
			sender.disabled = false;
			sender.onclick = function() {
				saveAs(blob, name + ".zip");
			};
			sender.onclick();
		}, function (e) {
			sender.disabled = false;
			alert(e);
		});
	} else {
		zip.generateAsync({type:"base64", mimeType: "application/octet-stream"}).then(function (base64) {
			location.href="data:application/zip;base64," + base64;
			sender.disabled = false;
		}, function (e) {
			sender.disabled = false;
			alert(e);
		});
	}

	return false;
}

function DoShowFileList(name, filelst) {
	var floatPanel = document.getElementById("floatPanel");
	floatPanel.style.display = "block";
	var floatPanelTitle = document.getElementById("floatPanelTitle");
	while (floatPanelTitle.firstChild) {
		floatPanelTitle.removeChild(floatPanelTitle.firstChild);
	}
	floatPanelTitle.appendChild(document.createTextNode(name));
	var floatPanelTable = document.getElementById("floatPanelTable");
	while (floatPanelTable.firstChild) {
		floatPanelTable.removeChild(floatPanelTable.firstChild);
	}
	for(var i = 0; i < filelst.length; ++i) {
		var url = filelst[i];
		var a = document.createElement('a');
		a.href = url;
		a.appendChild(document.createTextNode(url));
		var h = document.createElement('h3');
		h.appendChild(a);
		var td = document.createElement('td');
		td.appendChild(h);
		var tr = document.createElement('tr');
		tr.appendChild(td);
		floatPanelTable.appendChild(tr);
	}
}

function MakeTable(data) {
	var title_count = document.getElementById("title_count");
	title_count.removeChild(title_count.firstChild);
	title_count.appendChild(document.createTextNode("" + data.length + "/" + all_data.length + " Titles"));
	var table = document.getElementById("table_all");
	
	// keep title only
    rows = table.getElementsByTagName("tr");
	var count = table.rows.length;
	while(--count > 1) table.deleteRow(count); 
	
	var date = new Date();
	for(var i = 0; i < data.length; ++i) {
		var line = data[i];
		var filelst = line[4];
		var id = line[2];
		var tr = document.createElement('tr');
		
		// GET
		var td = document.createElement('td');
		var form = document.createElement('form');
		var btn = document.createElement('button');
		btn.className = "btn btn-primary";
		var text;
		if(filelst.length == 0) {
			text = "VIEW";
		} else {
			text = 'GET'
		}
		btn.appendChild(document.createTextNode(text));
		btn.onclick = function(arg1, arg2, sender){
			return function(){DoGet(arg1, arg2, sender); };
		}(id, filelst, btn);
		btn.type = "button";
		form.appendChild(btn);
		td.appendChild(form);
		tr.appendChild(td);
		
		// time
		date.setTime(line[0] * 1000);
		td = document.createElement('td');
		td.className = "datetime";
		td.appendChild(document.createTextNode(date.toLocaleString()));
		tr.appendChild(td);

		// brand
		td = document.createElement('td');
		td.className = "datetime";
		td.appendChild(document.createTextNode(line[1]));
		tr.appendChild(td);
		
		// name
		td = document.createElement('td');
		var a = document.createElement('a');
		a.href = "#";
		a.onclick = function(arg1, arg2) {
			return function(){DoShowFileList(arg1, arg2);};
		}(line[3], filelst);
		a.appendChild(document.createTextNode(line[3]))
		td.appendChild(a);
		tr.appendChild(td);

		table.appendChild(tr);
	}
};
var _timerID = 0;
function doFilterName(pattern) {
	if (pattern.length) {
		pattern = pattern.toLowerCase();
		filter_data = [];
		for(var i = 0; i < all_data.length; ++i) {
			var text = all_data[i];
			if (text[3].toLowerCase().indexOf(pattern) != -1 || text[1].toLowerCase().indexOf(pattern) != -1) {
				filter_data.push(text);
			}
		}
	} else {
		filter_data = all_data;
	}
	MakeTable(filter_data);
}
doFilterName("");
function onFilterInput(pattern) {
	if (_timerID) {
		window.clearTimeout(_timerID);
	}
	_timerID = window.setTimeout(function(){
		doFilterName(pattern);
	}, 330);
}

function sortTableByTime(newer) {
	if (newer) filter_data.sort(function(a,b){
		if (a[0] > b[0]) return 1;
		if (a[0] < b[0]) return -1;
		return 0;
	});
	else filter_data.sort(function(a,b){
		if (a[0] > b[0]) return -1;
		if (a[0] < b[0]) return 1;
		return 0;
	});
	MakeTable(filter_data);
}

function sortTableByName(reverse) {
	if (reverse) filter_data.sort(function(a,b){
		return a[2].localeCompare(b[2]);
	});
	else filter_data.sort(function(a,b){
		return b[2].localeCompare(a[2]);
	})
	MakeTable(filter_data);
}
</script>

  </body>
</html>