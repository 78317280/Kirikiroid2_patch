function fixTLGHdr(buf) {
	// "X" -> 88, "Y" -> 89, "Z" -> 90
	if(buf[3] == 88) { // JKMXE8 -> TLG5.0
		buf[0] = 0x54;
		buf[1] = 0x4c;
		buf[2] = 0x47;
		buf[3] = 0x35;
		buf[4] = 0x2e;
		buf[5] = 0x30;
		return true;
	}
	return false;
}

function fixTLG(off, buf) {
	// tricky way to fix TLG header
	switch(off) {
		case 0:
		case 15:
			fixTLGHdr(buf);
			return;
		case 12:
		case 27: // TLG5's width
			buf[0] ^= 0x1A;
			return;
		case 16:
		case 31: // TLG5's height
			buf[0] ^= 0x1C;
			return;
	}
}

Storages.setXP3ArchiveExtractionFilter(function(h,o,b,l,filename){
	var dl = 101 - o;
	if(dl > 0) {
		if(dl > l) dl = l;
		b.xor(0, dl, h>>3);
	} else {
		dl = 0;
	}
	if(l > dl) {
		b.xor(dl, l - dl, h>>1);
		var k = (h >> 1) ^ (h>>2);
		for(var i = dl; i < l; ++i) {
			if((o+i)&2) b[i] ^= k;
		}
	}
	// hack for tlg crypt
	if(o <= 34 && filename.length > 4 && filename.substr(filename.length - 4, 4) == '.tlg') global.fixTLG(o, b);
});