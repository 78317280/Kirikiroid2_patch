var t = (const)%[
0xB1354C15 => 0x94,
0xB96CB006 => 0xF9,
0x5A762F => 0xD0,
0xEE2F7440 => 0xBF,
0x387BA1D => 0xE2,
0xD9D39EFD => 0x2,
0xFF6E58E8 => 0x17,
0xB9294AFB => 0x4,
0xD0D74638 => 0xC7,
0xA0AAC7B0 => 0x4F,
0xCEA0865B => 0xA4,
0x1C61DB14 => 0xEB,
0xEF150DC7 => 0x38,
0x43A693D1 => 0x2E,
0x710D2980 => 0x7F,
0xC7BA2A3A => 0xC5,
0xFDADDA0E => 0xF1,
0x498F2AAC => 0x53,
0xFF855B28 => 0xD7,
0x8D9594FA => 0x5,
0x5A12CE7A => 0x85,
0x6FA55CDF => 0x20,
0x2A8A5FC8 => 0x37,
0xE6C7D281 => 0x7E,
0x45842F6F => 0x90,
0x763853B8 => 0x47,
0x3866FA6 => 0x59,
0x55A6307E => 0x81,
0xE1097752 => 0xAD,
0x8DF880C3 => 0x3C,
0x627B9002 => 0xFD,
0x69B0BD0D => 0xF2,
0x715D664B => 0xB4,
0xB1D79B4B => 0xB4,
0xC9DD6FA6 => 0x59,
0x54A9ACDD => 0x22,
0xCE1E6ACD => 0x32,
0xCE36C594 => 0x6B,
0xAA25C172 => 0x8D,
0x8037F2A2 => 0x5D,
0x3411C98F => 0x70,
0xEB892509 => 0xF6,
0x333300FD => 0x2,
0xCA570807 => 0xF8,
0xCF487E53 => 0xAC,
0x44E6A013 => 0xEC,
0x7E710B3F => 0xC0,
0x685AFCF5 => 0xA,
0xC5B7BBED => 0x12,
0x59F078B0 => 0x4F,
0x65C147F => 0x80,
0x5B3A0150 => 0xAF,
0xDB6CB0FC => 0x3,
0xFD55DFAC => 0x53,
0xA2926332 => 0xCD,
0xB4C66EB7 => 0x48,
0x1A7044C9 => 0x36,
0x8A1F28C9 => 0x36,
0x5C82A138 => 0xC7,
0x681C5B69 => 0x96,
0xBB9FCD41 => 0xBE
];
var q = %[];
var e = 0;
Storages.setXP3ArchiveExtractionFilter(function(h,o,b,l){
	var k = global.t[h];
	if (k!==void) {
		b.xor(0,l,k);
		return;
	}
	var t2 = global.q[h];
	if(!t2) {
		t2 = [];
		var t1 = [];
		for(var i = 0; i < 8; ++i) {
			var h1;
			if(h&1) h1 = h | 0x80000000;
			else h1 = h & 0x7FFFFFFF;
			h = h1 >> 1;
			t1.add(h1 & 0xFF); h1 >>= 8;
			t1.add(h1 & 0xFF); h1 >>= 8;
			t1.add(h1 & 0xFF); h1 >>= 8;
			t1.add(h1);
		}
		for(var i = 0; i < 32; ++i) {
			var c = ~t1[i];
			for(var j = 0; j < 32; ++j) {
				t2.add(c^t1[j]);
			}
		}
		global.q[h] = t2;
		++global.e;
	}
	for(var i = 0; i < l; ++i) {
		b[i] ^= t2[(i+o)&0x3FF];
	}
	if(global.e > 100) {
		global.q = %[];
		global.e = 0;
	}
});